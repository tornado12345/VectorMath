#if !canImport(ObjectiveC)
import XCTest

extension Matrix3Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Matrix3Tests = [
        ("testMatrix3Multiplication", testMatrix3Multiplication),
        ("testVector2Multiplication", testVector2Multiplication),
        ("testVector3Multiplication", testVector3Multiplication),
    ]
}

extension Matrix4Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Matrix4Tests = [
        ("testRotationAndTranslation", testRotationAndTranslation),
        ("testTransformationMatrixMultiplication", testTransformationMatrixMultiplication),
    ]
}

extension PerformanceTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__PerformanceTests = [
        ("testMatrix3MultiplicationPerformance", testMatrix3MultiplicationPerformance),
        ("testMatrix4MultiplicationPerformance", testMatrix4MultiplicationPerformance),
    ]
}

extension QuaternionTests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__QuaternionTests = [
        ("testAxisAngleConversion", testAxisAngleConversion),
        ("testEulerConversion", testEulerConversion),
        ("testMatrix4Conversion", testMatrix4Conversion),
        ("testVector3Multiplication", testVector3Multiplication),
    ]
}

extension Vector2Tests {
    // DO NOT MODIFY: This is autogenerated, use:
    //   `swift test --generate-linuxmain`
    // to regenerate.
    static let __allTests__Vector2Tests = [
        ("testAngleWith", testAngleWith),
        ("testRotatedBy", testRotatedBy),
    ]
}

public func __allTests() -> [XCTestCaseEntry] {
    return [
        testCase(Matrix3Tests.__allTests__Matrix3Tests),
        testCase(Matrix4Tests.__allTests__Matrix4Tests),
        testCase(PerformanceTests.__allTests__PerformanceTests),
        testCase(QuaternionTests.__allTests__QuaternionTests),
        testCase(Vector2Tests.__allTests__Vector2Tests),
    ]
}
#endif
